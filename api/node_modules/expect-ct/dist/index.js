"use strict";
function isPositiveInteger(option) {
    return (typeof option === 'number' &&
        option >= 0 &&
        Math.round(option) === option);
}
function parseMaxAge(option) {
    if (isPositiveInteger(option)) {
        return option;
    }
    else {
        throw new Error(option + " is not a valid value for maxAge. Please choose a positive integer.");
    }
}
function getHeaderValueFromOptions(options) {
    options = options || {};
    var directives = [];
    if (options.enforce) {
        directives.push('enforce');
    }
    var maxAge = 'maxAge' in options ? options.maxAge : 0;
    directives.push("max-age=" + parseMaxAge(maxAge));
    if (options.reportUri) {
        directives.push("report-uri=\"" + options.reportUri + "\"");
    }
    return directives.join(', ');
}
module.exports = function expectCt(options) {
    var headerValue = getHeaderValueFromOptions(options);
    return function expectCt(_req, res, next) {
        res.setHeader('Expect-CT', headerValue);
        next();
    };
};
